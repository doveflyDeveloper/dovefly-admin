<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	     	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	     	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd          
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
	default-lazy-init="true">
	
	<!-- 注解支持 -->
	<!-- <context:annotation-config /> -->
	
	<!-- 启动spring组件扫描，排除@Controller组件（该组件由SpringMVC配置文件扫描） -->
	<context:component-scan base-package="com.deertt">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!--用于读取.properties配置文件的信息 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/db/jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<!--定义数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<!-- 数据库基本信息配置 -->
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="driverClassName" value="${jdbc.driver}"/>
		<!-- 监控统计用的filter:stat -->
		<property name="filters" value="${jdbc.filters}"/>
		<!-- 最大并发连接数 -->
		<property name="maxActive" value="${jdbc.maxActive}"/>
		<!-- 初始化连接数量 -->
		<property name="initialSize" value="${jdbc.initialSize}"/>
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${jdbc.maxWait}"/>
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="${jdbc.minIdle}"/>
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
		<property name="validationQuery" value="${jdbc.validationQuery}"/>
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}"/>
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}"/>
		<property name="testOnReturn" value="${jdbc.testOnReturn}"/>
		<property name="maxOpenPreparedStatements" value="${jdbc.maxOpenPreparedStatements}"/>
		<!-- 打开 removeAbandoned 功能 -->
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}"/>
		<!-- 1800 秒，也就是 30 分钟 -->
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>
		<!-- 关闭 abanded 连接时输出错误日志 -->
		<property name="logAbandoned" value="${jdbc.logAbandoned}"/>
	</bean>
	
	<!--定义jdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!--定义事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 自动扫描@Transaction事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
 
	<!-- 用于持有ApplicationContext,可以使用SpringContextHolder.getBean('xxxx')的静态方法得到spring bean对象 -->
	<bean class="com.deertt.frame.base.project.SpringContextHolder" lazy-init="false" />

</beans>
